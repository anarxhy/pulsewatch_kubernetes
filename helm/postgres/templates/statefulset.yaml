apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: pulsewatch
spec:
  serviceName: postgres
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: psql
              containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-auth
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", {{ .Values.auth.user | quote }}, "-d", {{ .Values.auth.database | quote }}]
            initialDelaySeconds: 5
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", {{ .Values.auth.user | quote }}, "-d", {{ .Values.auth.database | quote }}]
            initialDelaySeconds: 15
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 999
            runAsGroup: 999
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.data.size | quote }}